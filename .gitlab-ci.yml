stages:
  - backend-test
  - backend-build
  - backend-publish
  - frontend-test
  - frontend-build
  - frontend-publish

cache:
  paths:
    - ./frontend/node_modules/
    - ./backend/node_modules/

frontend-build:
  stage: frontend-build
  image: node
  before_script:
    - cd ./frontend
    - npm install
  script:
    - npm run build
  artifacts:
    expire_in: 1 hour
    paths:
      - ./frontend/.next/

frontend-test:
  stage: frontend-test
  image: node
  before_script:
    - cd ./frontend
    - npm install
  script:
    - npm run test
    - echo "Tests passed"

backend-test:
  stage: backend-test
  image: node
  before_script:
    - cd ./backend
    - npm install
  script:
    - npm run unittest
    - echo "Tests passed"

backend-build:
  stage: backend-build
  image: node
  before_script:
    - cd ./backend
    - npm install
  script:
    - npm run build

backend-publish:
  stage: backend-publish
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - cd ./backend
    - docker login -u $DOCKER_USERNAME -p $DOCKER_TOKEN
  script:
    - docker build -t $DOCKER_USERNAME/$DOCKER_BACKEND_NAME:latest .
    - docker push $DOCKER_USERNAME/$DOCKER_BACKEND_NAME:latest
  after_script:
    - docker logout

frontend-publish:
  stage: frontend-publish
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - cd ./frontend
    - docker login -u $DOCKER_USERNAME -p $DOCKER_TOKEN
  script:
    - docker build -t $DOCKER_USERNAME/$DOCKER_FRONTEND_NAME:latest .
    - docker push $DOCKER_USERNAME/$DOCKER_FRONTEND_NAME:latest
  after_script:
    - docker logout
